@article{Meneguzzi2013a,
title = {Declarative planning in procedural agent architectures},
journal = {Expert Systems with Applications},
volume = {40},
number = {16},
pages = {6508 - 6520},
year = {2013},
issn = {0957-4174},
doi = {http://dx.doi.org/10.1016/j.eswa.2013.05.058},
url = {http://www.sciencedirect.com/science/article/pii/S0957417413003564},
author = {Felipe Meneguzzi and Michael Luck},
abstract = {Abstract Practical agent languages and their corresponding architectures have often relied on a static plan library with more or less direct trigger-response activation mechanisms as a source for agent behaviours for the sake of runtime efficiency. Although efficient, such a language design choice severely limits an agent’s ability to reason about its goals and adapt to unforeseen circumstances after being deployed. This effectively delegates the task of planning to the designers themselves, who must design plan libraries able to cope with every foreseeable situation an agent might find itself in by designing plans to deal with any contingency. In this paper we develop a formal conversion process from traditional \{BDI\} agent languages into declarative planning. Using this conversion process, we show how to integrate domain independent planning algorithms into the \{BDI\} interpreter, allowing a designer to program an agent not only through the trigger-response mechanism used in traditional languages, but also in terms of declarative goals. Our contribution here is twofold: firstly we increase an agent’s ability to cope with unforeseen situations and secondly we unburden an agent designer from having to define multiple plan combinations that could be easily generated by a planner.}
}

